{"version":3,"sources":["images/shareIcon.svg","images/blackHeartIcon.svg","images/logo.png","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/loading.gif","images/whiteHeartIcon.svg","context/MyContext.js","fetchs/mainFetch.js","context/Provider.js","pages/Login.jsx","components/Footer.jsx","components/SearchBar.jsx","components/Header.jsx","hooks/HookComidas.jsx","components/Card.jsx","components/CardList.jsx","components/Categories.jsx","components/Loading.jsx","Functions/loadMount.js","pages/Comidas.jsx","pages/Explorar.jsx","pages/BebidasExp.jsx","pages/ComidasExp.jsx","hooks/HookBebidas.jsx","pages/Bebidas.jsx","pages/Perfil.jsx","components/ShareButton.jsx","pages/ReceitasFeitas.jsx","pages/TelaDeFavoritos.jsx","pages/LocalDeOrigem.jsx","pages/ComidaIng.jsx","pages/BebidasIng.jsx","pages/NotFound.jsx","components/ButtonRedirect.jsx","components/ButtonFavorite.jsx","components/ButtonShare.jsx","components/Carousel.jsx","components/IngredientsList.jsx","components/VideoEmbed.jsx","pages/Detalhes.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MyContext","createContext","mainFetch","type","action","a","value","actions","procuraComida","procuraId","procuraBebida","random","ingredients","ingredientes","area","filterByArea","categories","filterIngredient","filterCategory","primeiraLetra","endPoint","drink","food","fetch","response","json","resolve","result","Provider","children","useState","name","setName","filterByIng","setFilterByIng","data","setData","dataMeals","setDataMeals","dataDrinks","setDataDrinks","renderFoods","setRenderFoods","renderDrinks","setRenderDrinks","context","handleClick","callback","Login","email","setEmail","password","setPassword","validation","setValidation","redirect","setRedirect","useEffect","okEmail","test","validPassword","length","validator","to","className","src","logo","alt","onSubmit","event","preventDefault","localStorage","setItem","JSON","stringify","autoComplete","htmlFor","id","onChange","target","data-testid","placeholder","disabled","Footer","path","Number","useLocation","pathname","includes","0","1","2","iconeDrinks","iconeExplorar","iconeComida","SearchBar","history","useHistory","pesquisa","setPesquisa","tipo","setTipo","useContext","handeChange","aviso","alert","foodConditions","meals","push","idMeal","drinkConditions","drinks","idDrink","handleSubmit","onClick","Header","props","titulo","showBar","setShowBar","rederizaBarra","3","profileIcon","searchIcon","HookComidas","loading","setLoading","setFood","setCategories","newCategories","setFetchFood","Card","index","thumb","apiType","CardList","list","page","map","item","key","changeRender","defaultProps","Categories","toggle","toggleCallback","fetchActions","handleCategoryButton","innerText","console","log","Button","strCategory","Loading","loadingGif","loadMount","title","search","Comidas","foodData","setFoodData","foodCategories","setFoodCategories","toggleCategory","setToggleCategory","Explorar","variant","size","BebidasExp","surprise","setSurprise","getRandomDrink","ComidasExp","getRandomFood","setDrink","Bebidas","drinkData","setDrinkData","drinkCategories","setDrinkCategories","HookBebidas","Perfil","info","getItem","parse","local","clear","copy","require","ShareButton","url","showShareMsg","setShowShareMsg","setTimeout","shareIcon","ReceitasFeitas","showRecipes","setShowRecipes","finishRecipes","SetFinishRecipes","onLink","filtrosReceitas","filter","receita","doneRecipes","CardGroup","recipe","style","width","Img","image","Body","Title","Subtitle","alcoholicOrNot","category","Text","doneDate","ListGroup","tags","tag","count","Item","setFinishRecipes","filtroBebidas","bebida","filtroComidas","comida","favoriteRecipes","foodName","desfavoritar","desfavorite","blackHeart","LocalDeOrigem","setArea","receitas","setReceitas","selected","areaSelected","setAreaSelected","getLocalOrigem","strArea","receitasList","getReceitas","ComidaIng","setIngredients","getIngredients","foods","getFoodById","ingredient","BebidasIng","getDrinks","drinkList","getDrinkById","NotFound","ButtonRedirect","renderData","idRecipe","renderType","completed","localStrObject","notDone","recipeinProgress","redirectClick","newDoneRecipe","Date","toLocaleDateString","completeRecipe","redirectBtn","testId","destiny","text","replace","ButtonFavorite","favoriteObject","favorites","isFavorite","setIsFavorite","thisFavoriteObject","oldFavorites","newFavorites","favoriteIconFull","favoriteIconTransp","Carousel","recipes","recommended","recommendedType","showIndex","setShowIndex","carouselBtn","sum","newIndex","handleCarouselBtn","hideCard","Math","floor","strMealThumb","strDrinkThumb","strMeal","strDrink","recommendedCard","sectorTranslator","comidas","bebidas","IngredientsList","params","recipeId","setCompleted","sector","arrayList","Object","keys","recipeIngs","setRecipeIngs","cocktails","checkBoxComponent","ingNum","ingOnArray","defaultChecked","newRecipeIngs","ing","sort","handleCheckBoxClick","testIdText","match","join","indexOf","VideoEmbed","videoData","recipeName","height","frameBorder","allow","allowFullScreen","ng-show","fetchTranslator","jsonTranslator","Detalhes","split","setRecipe","setRecommended","detailsFetchs","kind","apiResult","slice","strYoutube","strAlcoholic","strTags","strInstructions","App","exact","component","TelaDeFavoritos","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.068ad8fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.0df3ef35.png\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.c4cb9abc.gif\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","import { createContext } from 'react';\n\nconst MyContext = createContext();\n\nexport default MyContext;\n","const mainFetch = async (type, action, value = '') => {\n  const actions = {\n    procuraComida: 'search.php?s=',\n    procuraId: 'lookup.php?i=',\n    procuraBebida: 'search.php?s=',\n    random: 'random.php',\n    ingredients: 'list.php?i=list',\n    ingredientes: 'filter.php?i=',\n    area: 'list.php?a=list',\n    filterByArea: 'filter.php?a=',\n    categories: 'list.php?c=list',\n    filterIngredient: 'filter.php?i=',\n    filterCategory: 'filter.php?c=',\n    primeiraLetra: 'search.php?f=',\n  };\n  const endPoints = {\n    drink: 'https://www.thecocktaildb.com/api/json/v1/1/',\n    food: 'https://www.themealdb.com/api/json/v1/1/',\n  };\n  const endPoint = `${endPoints[type]}${actions[action]}${value}`;\n  const response = await fetch(endPoint);\n  const resolve = await response.json();\n  const result = await resolve;\n  return result;\n};\n\nexport default mainFetch;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from './MyContext';\nimport mainFetch from '../fetchs/mainFetch';\n\nfunction Provider({ children }) {\n  const [name, setName] = useState('');\n  const [filterByIng, setFilterByIng] = useState();\n  const [data, setData] = useState({\n    food: {},\n    drink: {},\n  });\n  const [dataMeals, setDataMeals] = useState();\n  const [dataDrinks, setDataDrinks] = useState();\n  const [renderFoods, setRenderFoods] = useState(false);\n  const [renderDrinks, setRenderDrinks] = useState(false);\n\n  const handleClick = async (type, action, value, callback) => {\n    const result = await mainFetch(type, action, value);\n    callback(result);\n  };\n\n  const context = {\n    handleClick,\n    data,\n    setName,\n    name,\n    setData,\n    filterByIng,\n    setFilterByIng,\n    dataMeals,\n    setDataMeals,\n    dataDrinks,\n    setDataDrinks,\n    renderFoods,\n    setRenderFoods,\n    renderDrinks,\n    setRenderDrinks,\n  };\n\n  return (\n    <MyContext.Provider value={ context }>\n      {children}\n    </MyContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport logo from '../images/logo.png';\nimport '../cssPages/Login.css';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [validation, setValidation] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    function validator() {\n      const min = 6;\n      const okEmail = /^[a-z0-9](\\.|-|_|[a-z]|\\d)+@([a-z]|\\d)+\\.[a-z]{2,3}(\\.[a-z]{2})?$/\n        .test(email);\n      const validPassword = password.length > min;\n      if (okEmail && validPassword === true) {\n        return setValidation(false);\n      }\n    }\n    validator();\n  }, [email, password]);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({ email }));\n    setRedirect(true);\n  }\n  if (redirect) return <Redirect to=\"/comidas\" />;\n  return (\n    <div className=\"loginContainer\">\n      <header className=\"loginHeader\">\n        <img className=\"logo\" src={ logo } alt=\"logo\" />\n      </header>\n      <h1>Find your favorite recipe on iTry!</h1>\n      <div className=\"loginForm\">\n        <form onSubmit={ onSubmit } className=\"container\" autoComplete=\"off\">\n          <label htmlFor=\"email\" className=\"label-float\">\n            <input\n              type=\"text\"\n              id=\"email\"\n              value={ email }\n              onChange={ (event) => setEmail(event.target.value) }\n              data-testid=\"email-input\"\n              placeholder=\" \"\n            />\n            <p>E-mail</p>\n          </label>\n          <label htmlFor=\"password\" className=\"label-float\">\n            <input\n              type=\"password\"\n              id=\"password\"\n              data-testid=\"password-input\"\n              value={ password }\n              onChange={ (event) => setPassword(event.target.value) }\n              placeholder=\" \"\n            />\n            <p>Password</p>\n          </label>\n          <button\n            className=\"btnLogin\"\n            type=\"submit\"\n            disabled={ validation }\n            data-testid=\"login-submit-btn\"\n          >\n            Entrar\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport '../cssPages/Footer.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport iconeDrinks from '../images/drinkIcon.svg';\nimport iconeExplorar from '../images/exploreIcon.svg';\nimport iconeComida from '../images/mealIcon.svg';\n\nfunction Footer() {\n  const styles = {\n    0: 'neutralStyle',\n    1: 'drinkStyle',\n    2: 'foodStyle',\n  };\n  const path = Number((useLocation().pathname).includes('bebidas'))\n  + 2 * Number((useLocation().pathname).includes('comidas'));\n\n  return (\n    <footer data-testid=\"footer\" className={ `footer ${styles[path]}` }>\n      <Link to=\"/bebidas\">\n        <img\n          src={ iconeDrinks }\n          alt=\"bebidas\"\n          data-testid=\"drinks-bottom-btn\"\n        />\n      </Link>\n      <Link to=\"/explorar\">\n        <img\n          src={ iconeExplorar }\n          alt=\"explorar\"\n          data-testid=\"explore-bottom-btn\"\n        />\n      </Link>\n      <Link to=\"/comidas\">\n        <img\n          src={ iconeComida }\n          alt=\"bebidas\"\n          data-testid=\"food-bottom-btn\"\n        />\n      </Link>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useContext, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport mainFetch from '../fetchs/mainFetch';\nimport MyContext from '../context/MyContext';\n\nfunction SearchBar() {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const [pesquisa, setPesquisa] = useState('');\n  const [tipo, setTipo] = useState('');\n  const { setDataMeals,\n    setDataDrinks,\n    setRenderFoods,\n    setRenderDrinks,\n  } = useContext(MyContext);\n\n  const handeChange = ({ target }) => {\n    if (target.name === 'pesquisa') {\n      setPesquisa(target.value);\n    } else { setTipo(target.id); }\n  };\n\n  const aviso = () => {\n    if (tipo === 'primeiraLetra' && pesquisa.length > 1) {\n      return alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n  };\n\n  const foodConditions = (meals) => {\n    if (meals === null) {\n      return alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    }\n    if (meals.length === 1) {\n      history.push(`/comidas/${meals[0].idMeal}`);\n    }\n  };\n\n  const drinkConditions = (drinks) => {\n    if (drinks === null) {\n      return alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    }\n    if (drinks.length === 1) {\n      history.push(`/bebidas/${drinks[0].idDrink}`);\n    }\n  };\n\n  const handleSubmit = async () => {\n    aviso();\n    if (pathname === '/comidas') {\n      const type = 'food';\n      const { meals } = await mainFetch(type, tipo, pesquisa);\n      setDataMeals(meals);\n      foodConditions(meals);\n      setRenderFoods(true);\n    }\n    if (pathname === '/bebidas') {\n      const type = 'drink';\n      const { drinks } = await mainFetch(type, tipo, pesquisa);\n      setDataDrinks(drinks);\n      drinkConditions(drinks);\n      setRenderDrinks(true);\n    }\n  };\n  return (\n    <div className=\"serchBar\">\n      <div className=\"div-do-inferno\">\n        <input\n          className=\"barraDeBusca\"\n          data-testid=\"search-input\"\n          name=\"pesquisa\"\n          type=\"text\"\n          onChange={ handeChange }\n        />\n        <button\n          className=\"buttonSearch\"\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          onClick={ handleSubmit }\n        >\n          Buscar\n        </button>\n      </div>\n      <label htmlFor=\"filter\" className=\"labelRadio\">\n        <br />\n        <input\n          className=\"initialRadio\"\n          id=\"ingredientes\"\n          name=\"filter\"\n          type=\"radio\"\n          data-testid=\"ingredient-search-radio\"\n          onChange={ handeChange }\n        />\n        Ingrediente\n        <input\n          className=\"radio\"\n          id=\"procuraComida\"\n          name=\"filter\"\n          type=\"radio\"\n          data-testid=\"name-search-radio\"\n          onChange={ handeChange }\n        />\n        Nome\n        <input\n          className=\"radio\"\n          id=\"primeiraLetra\"\n          name=\"filter\"\n          type=\"radio\"\n          data-testid=\"first-letter-search-radio\"\n          onChange={ handeChange }\n        />\n        Primeira Letra\n      </label>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport '../cssPages/Header.css';\nimport SearchBar from './SearchBar';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\n\nfunction Header(props) {\n  const styles = {\n    0: 'neutralStyle',\n    1: 'drinkStyle',\n    2: 'foodStyle',\n    3: 'favoriteAndDone',\n  };\n  const numero3 = 3;\n  const { titulo, pesquisa, className } = props;\n  const path = Number((useLocation().pathname).includes('bebidas'))\n    + 2 * Number((useLocation().pathname).includes('comidas'))\n    + numero3 * Number((useLocation().pathname).includes('perfil'));\n\n  const [showBar, setShowBar] = useState(false);\n  const rederizaBarra = () => (showBar ? setShowBar(false) : setShowBar(true));\n\n  const iconePesquisa = () => (\n    <button className=\"btnSearch\" type=\"button\" onClick={ rederizaBarra }>\n      <img\n        src={ searchIcon }\n        alt=\"icone de busca\"\n        data-testid=\"search-top-btn\"\n      />\n    </button>\n  );\n\n  return (\n    <div>\n      <header className={ `header ${styles[path]}` }>\n        <Link to=\"/perfil\">\n          <img\n            data-testid=\"profile-top-btn\"\n            src={ profileIcon }\n            alt=\"imagem de pefil\"\n          />\n        </Link>\n        <h3 data-testid=\"page-title\" className={ className }>{ titulo }</h3>\n        { pesquisa === 'true' ? iconePesquisa() : null }\n      </header>\n      <div className=\"filtros\">\n        { showBar ? <SearchBar /> : null }\n      </div>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  pesquisa: PropTypes.string,\n  titulo: PropTypes.any,\n  className: PropTypes.string,\n}.isRequired;\n\nexport default Header;\n","import { useEffect, useState } from 'react';\nimport mainFetch from '../fetchs/mainFetch';\n\nfunction HookComidas() {\n  const [loading, setLoading] = useState(true);\n  const [food, setFood] = useState({});\n  const [categories, setCategories] = useState({});\n\n  useEffect(() => {\n    const setFetchFood = async () => {\n      setLoading(true);\n      const result = await mainFetch('food', 'procuraComida');\n      setFood(result);\n      const newCategories = await mainFetch('food', 'categories');\n      setCategories(newCategories);\n      setLoading(false);\n    };\n    setFetchFood();\n  }, []);\n\n  return [food, loading, categories, setLoading];\n}\n\nexport default HookComidas;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Card({ index, thumb, name, onClick, apiType }) {\n  return (\n    <button\n      type=\"button\"\n      data-testid={ (apiType) ? `${index}-ingredient-card` : `${index}-recipe-card` }\n      name={ name }\n      className=\"cardRecipe\"\n      onClick={ onClick }\n    >\n      <img\n        data-testid={ `${index}-card-img` }\n        className=\"recipeThumbnail\"\n        name={ name }\n        src={ thumb }\n        alt={ name }\n      />\n      <span\n        data-testid={ `${index}-card-name` }\n        name={ name }\n      >\n        { name }\n      </span>\n    </button>\n  );\n}\n\nCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  thumb: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  apiType: PropTypes.string.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\n\nconst MAXIMUM_INDEX = 11;\n\nfunction CardList({ list, apiType, page, onClick }) {\n  const changeRender = (item, index) => {\n    const food = item[`str${apiType}`];\n    const drink = item[`str${apiType}1`];\n    if (apiType !== 'Ingredient') {\n      return (\n        <Link\n          className=\"singleCard\"\n          to={ `/${page}/${item[`id${apiType}`]}` }\n          key={ index }\n        >\n          <Card\n            index={ index }\n            thumb={ item[`str${apiType}Thumb`] }\n            name={ item[`str${apiType}`] }\n          />\n        </Link>\n      );\n    }\n    if (page !== 'bebidas') {\n      return (\n        <div className=\"singleCard\">\n          <Card\n            index={ index }\n            thumb={ `https://www.themealdb.com/images/ingredients/${food}-Small.png` }\n            name={ item[`str${apiType}`] }\n            onClick={ onClick }\n            apiType={ apiType }\n          />\n        </div>\n      );\n    }\n    return (\n      <div className=\"singleCard\">\n        <Card\n          index={ index }\n          thumb={ `https://www.thecocktaildb.com/images/ingredients/${drink}-Small.png` }\n          name={ item[`str${apiType}1`] }\n          onClick={ onClick }\n          apiType={ apiType }\n        />\n      </div>\n    );\n  };\n  return (\n    <main className=\"cardContainer\">\n      <div className=\"cardList\">\n        {\n          !list ? <div>Empty List</div> : (\n            list.map((item, index) => index > MAXIMUM_INDEX\n            || (\n              changeRender(item, index)\n            ))\n          )\n        }\n      </div>\n    </main>\n  );\n}\n\nCardList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object),\n  apiType: PropTypes.string.isRequired,\n  page: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nCardList.defaultProps = {\n  list: [{}],\n};\n\nexport default CardList;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport mainFetch from '../fetchs/mainFetch';\nimport MyContext from '../context/MyContext';\n\nfunction Categories({\n  type,\n  action,\n  list,\n  callback,\n  setLoading,\n  toggle,\n  toggleCallback,\n}) {\n  const { setFilterByIng } = useContext(MyContext);\n  const MAXIMUM_INDEX = 4;\n\n  const fetchActions = {\n    food: 'procuraComida',\n    drink: 'procuraBebida',\n  };\n\n  const handleCategoryButton = async ({ target }) => {\n    setFilterByIng(null);\n    setLoading(true);\n    const value = target.innerText;\n    const result = toggle === value || value === 'All'\n      ? await mainFetch(type, fetchActions[type])\n      : await mainFetch(type, action, value);\n    callback(result);\n    setLoading(false);\n    const toggleValue = value === toggle ? 'All' : value;\n    toggleCallback(toggleValue);\n  };\n\n  console.log(toggle);\n  return (\n    <aside className=\"categoryContainer\">\n      <nav className=\"categoryButtons\">\n        <Button\n          className={\n            toggle === 'All'\n              ? 'btnCategorias btnClicked'\n              : 'btnCategorias'\n          }\n          data-testid=\"All-category-filter\"\n          onClick={ handleCategoryButton }\n        >\n          All\n        </Button>\n        {\n          list.map((item, index) => index > MAXIMUM_INDEX\n          || (\n            <Button\n              className={\n                toggle !== item.strCategory\n                  ? 'btnCategorias'\n                  : 'btnCategorias btnClicked'\n              }\n              data-testid={ `${item.strCategory}-category-filter` }\n              key={ index }\n              onClick={ handleCategoryButton }\n            >\n              { item.strCategory }\n            </Button>\n          ))\n        }\n      </nav>\n    </aside>\n  );\n}\n\nCategories.propTypes = {\n  type: PropTypes.string.isRequired,\n  action: PropTypes.string.isRequired,\n  list: PropTypes.arrayOf(PropTypes.object).isRequired,\n  callback: PropTypes.func.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  toggle: PropTypes.string.isRequired,\n  toggleCallback: PropTypes.func.isRequired,\n};\n\nexport default Categories;\n","import React from 'react';\nimport loadingGif from '../images/loading.gif';\n\nfunction Loading() {\n  return (\n    <div className=\"main-details\">\n      <div className=\"loadingContainer\">\n        <img className=\"loadingGif\" src={ loadingGif } alt=\"Loading...\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport Footer from '../components/Footer';\n\nconst loadMount = (title, search, className) => (\n  <>\n    <Header titulo={ title } pesquisa={ search } className={ className } />\n    <Loading />\n    <Footer />\n  </>\n);\n\nexport default loadMount;\n","import React, { useEffect, useState, useContext } from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport HookComidas from '../hooks/HookComidas';\nimport CardList from '../components/CardList';\nimport Categories from '../components/Categories';\nimport MyContext from '../context/MyContext';\nimport loadMount from '../Functions/loadMount';\nimport '../cssPages/Refeicao.css';\n\nfunction Comidas() {\n  const { filterByIng, renderFoods, dataMeals, setFilterByIng } = useContext(MyContext);\n  const [foodData, setFoodData] = useState({});\n  const [foodCategories, setFoodCategories] = useState([]);\n  const [food, loading, categories, setLoading] = HookComidas();\n  const [toggleCategory, setToggleCategory] = useState('All');\n\n  useEffect(() => {\n    setFoodData({\n      ...food,\n    });\n    setFoodCategories(\n      categories.meals,\n    );\n  }, [food, categories]);\n\n  useEffect(() => () => {\n    setFilterByIng(null);\n  }, [setFilterByIng]);\n\n  const changeRender = (condition) => {\n    if (condition) {\n      return (<CardList\n        list={ dataMeals }\n        apiType=\"Meal\"\n        page=\"comidas\"\n      />);\n    }\n    return (\n      <CardList\n        list={ filterByIng ? filterByIng.meals : foodData.meals }\n        apiType=\"Meal\"\n        page=\"comidas\"\n      />\n    );\n  };\n\n  return loading\n    ? loadMount('Comidas', 'true', 'foodStyle')\n    : (\n      <>\n        <Header titulo=\"Comidas\" pesquisa=\"true\" className=\"foodStyle\" />\n        <div className=\"pageComida\">\n          <Categories\n            type=\"food\"\n            action=\"filterCategory\"\n            list={ foodCategories }\n            callback={ setFoodData }\n            setLoading={ setLoading }\n            toggle={ toggleCategory }\n            toggleCallback={ setToggleCategory }\n          />\n          {changeRender(renderFoods)}\n        </div>\n        <Footer />\n      </>\n    );\n}\n\nexport default Comidas;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport '../cssPages/Explore.css';\n\nfunction Explorar() {\n  const [redirect, setRedirect] = useState({\n    redirect: false,\n    path: '',\n  });\n\n  function onClick(event) {\n    const { name } = event.target;\n    event.preventDefault();\n    setRedirect({\n      redirect: true,\n      path: name,\n    });\n  }\n\n  if (redirect.redirect) return <Redirect to={ `/explorar/${redirect.path}` } />;\n  return (\n    <div>\n      <Header titulo=\"Explorar\" />\n      <main className=\"pageComida\">\n        <div className=\"exploreContainer\">\n          <Button\n            data-testid=\"explore-food\"\n            className=\"btnExplore\"\n            type=\"button\"\n            name=\"comidas\"\n            variant=\"light\"\n            size=\"lg\"\n            onClick={ onClick }\n          >\n            Explorar Comidas\n          </Button>\n          <Button\n            data-testid=\"explore-drinks\"\n            className=\"btnExplore\"\n            type=\"button\"\n            name=\"bebidas\"\n            variant=\"light\"\n            size=\"lg\"\n            onClick={ onClick }\n          >\n            Explorar Bebidas\n          </Button>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Explorar;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport '../cssPages/Explore.css';\nimport mainFetch from '../fetchs/mainFetch';\n\nfunction BebidasExp() {\n  const [surprise, setSurprise] = useState({ idDrink: '' });\n  const [redirect, setRedirect] = useState({\n    path: '',\n  });\n\n  const getRandomDrink = async () => {\n    const list = await mainFetch('drink', 'random');\n    console.log(list);\n    const { drinks } = list;\n    setSurprise({ idDrink: drinks[0].idDrink });\n  };\n\n  function onClick(event) {\n    const { name } = event.target;\n    if (name === 'surprise') getRandomDrink();\n    else {\n      setRedirect({\n        path: name,\n      });\n    }\n  }\n\n  if (surprise.idDrink) {\n    return <Redirect to={ `/bebidas/${surprise.idDrink}` } />;\n  }\n  if (redirect.path) return <Redirect to={ `/explorar/bebidas/${redirect.path}` } />;\n  return (\n    <div>\n      <Header titulo=\"Explorar Bebidas\" />\n      <main className=\"pageComida\">\n        <div className=\"exploreContainer\">\n          <Button\n            data-testid=\"explore-by-ingredient\"\n            className=\"btnExploreBebidas\"\n            type=\"button\"\n            name=\"ingredientes\"\n            variant=\"light\"\n            size=\"lg\"\n            onClick={ onClick }\n          >\n            Por Ingredientes\n          </Button>\n          <Button\n            data-testid=\"explore-surprise\"\n            className=\"btnExploreBebidas\"\n            type=\"button\"\n            name=\"surprise\"\n            variant=\"light\"\n            size=\"lg\"\n            onClick={ onClick }\n          >\n            Me Surpreenda!\n          </Button>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default BebidasExp;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport '../cssPages/Explore.css';\nimport mainFetch from '../fetchs/mainFetch';\n\nfunction ComidasExp() {\n  const [surprise, setSurprise] = useState({ idMeal: '' });\n  const [redirect, setRedirect] = useState({\n    path: '',\n  });\n\n  const getRandomFood = async () => {\n    const list = await mainFetch('food', 'random');\n    const { meals } = list;\n    setSurprise({ idMeal: meals[0].idMeal });\n  };\n\n  function onClick(event) {\n    const { name } = event.target;\n    if (name === 'surprise') getRandomFood();\n    else {\n      setRedirect({\n        path: name,\n      });\n    }\n  }\n\n  if (surprise.idMeal) {\n    return <Redirect to={ `/comidas/${surprise.idMeal}` } />;\n  }\n  if (redirect.path) return <Redirect to={ `/explorar/comidas/${redirect.path}` } />;\n  return (\n    <div>\n      <Header titulo=\"Explorar Comidas\" />\n      <main className=\"pageComida\">\n        <div className=\"exploreContainer\">\n          <Button\n            data-testid=\"explore-by-ingredient\"\n            className=\"btnExploreComidas\"\n            type=\"button\"\n            name=\"ingredientes\"\n            variant=\"light\"\n            size=\"lg\"\n            onClick={ onClick }\n          >\n            Por Ingredientes\n          </Button>\n          <Button\n            data-testid=\"explore-by-area\"\n            className=\"btnExploreComidas\"\n            type=\"button\"\n            name=\"area\"\n            variant=\"light\"\n            size=\"lg\"\n            onClick={ onClick }\n          >\n            Por Local de Origem\n          </Button>\n          <Button\n            data-testid=\"explore-surprise\"\n            className=\"btnExploreComidas\"\n            type=\"button\"\n            name=\"surprise\"\n            variant=\"light\"\n            size=\"lg\"\n            onClick={ onClick }\n          >\n            Me Surpreenda!\n          </Button>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ComidasExp;\n","import { useEffect, useState } from 'react';\nimport mainFetch from '../fetchs/mainFetch';\n\nfunction HookComidas() {\n  const [loading, setLoading] = useState(true);\n  const [drink, setDrink] = useState({});\n  const [categories, setCategories] = useState({});\n\n  useEffect(() => {\n    const setFetchFood = async () => {\n      setLoading(true);\n      const result = await mainFetch('drink', 'procuraBebida');\n      setDrink(result);\n      const newCategories = await mainFetch('drink', 'categories');\n      setCategories(newCategories);\n      setLoading(false);\n    };\n    setFetchFood();\n  }, []);\n\n  return [drink, loading, categories, setLoading];\n}\n\nexport default HookComidas;\n","import React, { useEffect, useState, useContext } from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport HookBebidas from '../hooks/HookBebidas';\nimport CardList from '../components/CardList';\nimport Categories from '../components/Categories';\nimport MyContext from '../context/MyContext';\nimport loadMount from '../Functions/loadMount';\nimport '../cssPages/Refeicao.css';\n\nfunction Bebidas() {\n  const { filterByIng, renderDrinks, dataDrinks, setFilterByIng } = useContext(MyContext);\n  const [drinkData, setDrinkData] = useState({});\n  const [drinkCategories, setDrinkCategories] = useState([]);\n  const [drink, loading, categories, setLoading] = HookBebidas();\n  const [toggleCategory, setToggleCategory] = useState('All');\n\n  useEffect(() => {\n    setDrinkData({\n      ...drink,\n    });\n    setDrinkCategories(\n      categories.drinks,\n    );\n  }, [drink, categories]);\n\n  useEffect(() => () => {\n    setFilterByIng(null);\n  }, [setFilterByIng]);\n\n  const changeRender = (condition) => {\n    if (condition) {\n      return (<CardList\n        list={ dataDrinks }\n        apiType=\"Drink\"\n        page=\"bebidas\"\n      />);\n    }\n    return (\n      <CardList\n        list={ filterByIng ? filterByIng.drinks : drinkData.drinks }\n        apiType=\"Drink\"\n        page=\"bebidas\"\n      />\n    );\n  };\n\n  return loading\n    ? loadMount('Bebidas', 'true', 'drinkStyle')\n    : (\n      <>\n        <Header titulo=\"Bebidas\" pesquisa=\"true\" className=\"drinkStyle\" />\n        <div className=\"pageComida\">\n          <Categories\n            type=\"drink\"\n            action=\"filterCategory\"\n            list={ drinkCategories }\n            callback={ setDrinkData }\n            setLoading={ setLoading }\n            toggle={ toggleCategory }\n            toggleCallback={ setToggleCategory }\n          />\n          {changeRender(renderDrinks)}\n        </div>\n        <Footer />\n      </>\n    );\n}\n\nexport default Bebidas;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport '../cssPages/Perfil.css';\n\nfunction Perfil(props) {\n  const [email, setEmail] = useState('');\n  const { history } = props;\n\n  const local = () => {\n    const info = localStorage.getItem('user')\n      ? JSON.parse(localStorage.getItem('user')) : '';\n    setEmail(info.email);\n  };\n\n  useEffect(() => {\n    local();\n  }, []);\n\n  const logOut = () => {\n    localStorage.clear();\n    history.push('/');\n  };\n\n  return (\n    <div>\n      <Header titulo=\"Perfil\" className=\"textPerfil\" />\n      <div className=\"perfil pageComida\">\n        <p data-testid=\"profile-email\" className=\"email\">{ email }</p>\n        <div className=\"PerfilContainer\">\n          <button\n            data-testid=\"profile-done-btn\"\n            type=\"button\"\n            onClick={ () => history.push('/receitas-feitas') }\n          >\n            Receitas Feitas\n          </button>\n          <button\n            data-testid=\"profile-favorite-btn\"\n            type=\"button\"\n            onClick={ () => history.push('/receitas-favoritas') }\n          >\n            Receitas Favoritas\n          </button>\n          <button\n            data-testid=\"profile-logout-btn\"\n            type=\"button\"\n            onClick={ () => logOut() }\n          >\n            Sair\n          </button>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nPerfil.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default Perfil;\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\n\nconst shareMsgDuration = 2000;\nconst copy = require('clipboard-copy');\n\nfunction ShareButton(data) {\n  const { url, index } = data;\n  const [showShareMsg, setShowShareMsg] = useState(false);\n  const { pathname } = useLocation();\n\n  const shareImgClick = () => {\n    const value = url || `http://localhost:3000${pathname}`;\n    copy(value);\n    setShowShareMsg(true);\n    setTimeout(() => setShowShareMsg(false), shareMsgDuration);\n  };\n\n  return (\n    <>\n      <button type=\"button\" onClick={ shareImgClick } className=\"btnShare\">\n        <img\n          src={ shareIcon }\n          alt=\"Compartilhe o link desta receita\"\n          data-testid={ `${index}-horizontal-share-btn` }\n        />\n      </button>\n      {showShareMsg && <p>Link copiado!</p>}\n    </>\n  );\n}\n\nexport default ShareButton;\n","import React, { useEffect, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport { Redirect } from 'react-router-dom';\nimport { ListGroup } from 'react-bootstrap';\nimport Header from '../components/Header';\nimport '../cssPages/ReceitasF.css';\nimport ShareButton from '../components/ShareButton';\n\nfunction ReceitasFeitas() {\n  const [showRecipes, setShowRecipes] = useState([]);\n  const [finishRecipes, SetFinishRecipes] = useState([]);\n  const [redirect, setRedirect] = useState(null);\n  const minNumber = 2;\n\n  useEffect(() => {\n    const doneRecipes = (localStorage.getItem('doneRecipes'))\n      ? JSON.parse(localStorage.getItem('doneRecipes')) : [];\n    SetFinishRecipes(doneRecipes);\n    setShowRecipes(doneRecipes);\n  }, []);\n\n  function onLink(type, id) {\n    setRedirect(`/${type}s/${id}`);\n  }\n\n  function onClick({ target: { name } }) {\n    const filtrosReceitas = finishRecipes\n      .filter((receita) => receita.type.includes(name));\n    setShowRecipes(filtrosReceitas);\n  }\n\n  if (redirect) return <Redirect to={ redirect } />;\n  return (\n    <>\n      <Header titulo=\"Receitas Feitas\" pesquisa=\"false\" className=\"textPerfil\" />\n      <main className=\"pageRF\">\n        <div className=\"btnFiltro\">\n          <button\n            name=\"\"\n            type=\"button\"\n            onClick={ onClick }\n            data-testid=\"filter-by-all-btn\"\n          >\n            All\n\n          </button>\n          <button\n            name=\"comida\"\n            type=\"button\"\n            onClick={ onClick }\n            data-testid=\"filter-by-food-btn\"\n          >\n            Food\n\n          </button>\n          <button\n            name=\"bebida\"\n            type=\"button\"\n            onClick={ onClick }\n            data-testid=\"filter-by-drink-btn\"\n          >\n            Drinks\n\n          </button>\n        </div>\n        <CardGroup className=\"paiDeTodos\">\n          {showRecipes.length === 0\n            ? 'Lista vazia!' : showRecipes.map((recipe, index) => (\n              <Card\n                className=\"listaReceitas\"\n                name={ recipe.name }\n                style={ { width: '18rem' } }\n                key={ index }\n              >\n                <Card.Img\n                  data-testid={ `${index}-horizontal-image` }\n                  variant=\"top\"\n                  onClick={ () => onLink(recipe.type, recipe.id) }\n                  src={ `${recipe.image}` }\n                  alt={ recipe.name }\n                />\n                <Card.Body>\n                  <div className=\"paizao\">\n                    <Card.Title\n                      data-testid={ `${index}-horizontal-name` }\n                      onClick={ () => onLink(recipe.type, recipe.id) }\n                    >\n                      { recipe.name }\n                    </Card.Title>\n                    <ShareButton className=\"btnShare\" url={ `http://localhost:3000/${recipe.type}s/${recipe.id}` } index={ index } />\n                  </div>\n                  <Card.Subtitle\n                    className=\"mb-2 text-muted\"\n                    data-testid={ `${index}-horizontal-top-text` }\n                  >\n                    {recipe.area.length === 0 ? recipe.alcoholicOrNot\n                      : `${recipe.area} - ${recipe.category}`}\n                  </Card.Subtitle>\n                  <Card.Text data-testid={ `${index}-horizontal-done-date` }>\n                    {recipe.doneDate}\n                  </Card.Text>\n\n                  <ListGroup variant=\"flush\">\n                    {\n                      recipe.tags.length === 0 ? ''\n                        : recipe.tags.map((tag, count) => count > minNumber || (\n                          <ListGroup.Item\n                            className=\"listaReceitas\"\n                            key={ count }\n                            data-testid={ `${index}-${tag}-horizontal-tag` }\n                          >\n                            {' '}\n                            {tag}\n                            {' '}\n                          </ListGroup.Item>))\n                    }\n                  </ListGroup>\n                </Card.Body>\n              </Card>\n            ))}\n        </CardGroup>\n\n      </main>\n    </>\n  );\n}\n\nexport default ReceitasFeitas;\n","import React, { useEffect, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport '../cssPages/ReceitasFavoritas.css';\nimport blackHeart from '../images/blackHeartIcon.svg';\nimport ShareButton from '../components/ShareButton';\n\nfunction ReceitasFeitas() {\n  const [showRecipes, setShowRecipes] = useState([]);\n  const [finishRecipes, setFinishRecipes] = useState([]);\n  const [redirect, setRedirect] = useState(null);\n\n  useEffect(() => {\n    const favoriteRecipes = localStorage.getItem('favoriteRecipes')\n      ? JSON.parse(localStorage.getItem('favoriteRecipes')) : [];\n    setFinishRecipes(favoriteRecipes);\n    setShowRecipes(favoriteRecipes);\n  }, []);\n\n  function desfavorite(foodName) {\n    const desfavoritar = finishRecipes.filter((value) => value.name !== foodName);\n    setShowRecipes(showRecipes.filter((value) => value.name !== foodName));\n    setFinishRecipes(desfavoritar);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(desfavoritar));\n  }\n\n  function onLink(type, id) {\n    setRedirect(`/${type}s/${id}`);\n  }\n\n  function onClick({ target: { name } }) {\n    const filtroBebidas = finishRecipes.filter((bebida) => bebida.type === 'bebida');\n    const filtroComidas = finishRecipes.filter((comida) => comida.type === 'comida');\n    if (name === 'bebida') setShowRecipes(filtroBebidas);\n    if (name === 'comida') setShowRecipes(filtroComidas);\n    if (name === 'all') setShowRecipes(finishRecipes);\n  }\n\n  if (redirect) return <Redirect to={ redirect } />;\n  return (\n    <>\n      <Header titulo=\"Receitas Favoritas\" pesquisa=\"false\" className=\"textPerfil \" />\n      <main className=\"pageRF\">\n        <div className=\"btnFavoriteRecipes\">\n          <button\n            name=\"all\"\n            type=\"button\"\n            onClick={ onClick }\n            data-testid=\"filter-by-all-btn\"\n          >\n            All\n\n          </button>\n          <button\n            name=\"comida\"\n            type=\"button\"\n            onClick={ onClick }\n            data-testid=\"filter-by-food-btn\"\n          >\n            Food\n\n          </button>\n          <button\n            name=\"bebida\"\n            type=\"button\"\n            onClick={ onClick }\n            data-testid=\"filter-by-drink-btn\"\n          >\n            Drinks\n\n          </button>\n        </div>\n        <div className=\"paiDeTodos\">\n          {showRecipes.length === 0\n            ? 'Lista vazia!' : showRecipes.map((recipe, index) => (\n              <Card\n                name={ recipe.name }\n                style={ { width: '18rem' } }\n                key={ index }\n                className=\"cardRecipe\"\n              >\n                <Card.Img\n                  data-testid={ `${index}-horizontal-image` }\n                  variant=\"top\"\n                  onClick={ () => onLink(recipe.type, recipe.id) }\n                  src={ `${recipe.image}` }\n                  alt={ recipe.name }\n                />\n                <Card.Body>\n                  <div className=\"paizao\">\n                    <Card.Title\n                      data-testid={ `${index}-horizontal-name` }\n                      onClick={ () => onLink(recipe.type, recipe.id) }\n                    >\n                      { recipe.name }\n                    </Card.Title>\n                    <ShareButton url={ `http://localhost:3000/${recipe.type}s/${recipe.id}` } index={ index } />\n                    <button\n                      type=\"button\"\n                      className=\"button-filtro\"\n                      name={ recipe.name }\n                      onClick={ () => desfavorite(recipe.name) }\n                    >\n\n                      <img\n                        className=\"shareIcon\"\n                        alt={ recipe.name }\n                        src={ blackHeart }\n                        data-testid={ `${index}-horizontal-favorite-btn` }\n                      />\n                    </button>\n                  </div>\n                  <div\n                    className=\"mb-2 text-muted\"\n                    data-testid={ `${index}-horizontal-top-text` }\n                  >\n                    {recipe.area.length === 0 ? recipe.alcoholicOrNot\n                      : `${recipe.area} - ${recipe.category}`}\n\n                  </div>\n                </Card.Body>\n              </Card>\n            ))}\n        </div>\n      </main>\n\n    </>\n  );\n}\n\nexport default ReceitasFeitas;\n","import React, { useEffect, useState } from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport '../cssPages/Explore.css';\nimport mainFetch from '../fetchs/mainFetch';\nimport CardList from '../components/CardList';\n\nfunction LocalDeOrigem() {\n  const [area, setArea] = useState([]);\n  const [receitas, setReceitas] = useState();\n  const [areaSelected, setAreaSelected] = useState({\n    selected: 'All',\n  });\n\n  const getLocalOrigem = async () => {\n    const list = await mainFetch('food', 'area');\n    const { meals } = list;\n    const all = { strArea: 'All' };\n    setArea([all, ...meals]);\n    const receitasList = await mainFetch('food', 'procuraComida');\n    setReceitas([...receitasList.meals]);\n  };\n\n  useEffect(() => {\n    getLocalOrigem();\n  }, []);\n\n  useEffect(() => {\n    const getReceitas = async () => {\n      if (areaSelected.selected === 'All') {\n        const list = await mainFetch('food', 'procuraComida');\n        const { meals } = list;\n        setReceitas([...meals]);\n      } else {\n        const list = await mainFetch('food', 'filterByArea', areaSelected.selected);\n        const { meals } = list;\n        setReceitas([...meals]);\n      }\n    };\n    getReceitas();\n  }, [areaSelected]);\n\n  function handleChange(event) {\n    const { value } = event.target;\n    setAreaSelected({\n      selected: value,\n    });\n  }\n\n  console.log(receitas);\n  if (!area) return <p>Loading...</p>;\n  return (\n    <div>\n      <Header titulo=\"Explorar Origem\" pesquisa=\"true\" />\n      <main className=\"pageComida\">\n        <select\n          className=\"select-area\"\n          data-testid=\"explore-by-area-dropdown\"\n          onChange={ handleChange }\n        >\n          { area.map(({ strArea }, index) => (\n            <option\n              data-testid={ `${strArea}-option` }\n              value={ strArea }\n              key={ index }\n            >\n              { strArea }\n            </option>\n          ))}\n        </select>\n        <CardList\n          list={ receitas }\n          apiType=\"Meal\"\n          page=\"comidas\"\n        />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default LocalDeOrigem;\n","import React, { useEffect, useState, useContext } from 'react';\n/* import Card from 'react-bootstrap/Card'; */\nimport { Redirect } from 'react-router-dom';\nimport CardList from '../components/CardList';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport mainFetch from '../fetchs/mainFetch';\nimport loadMount from '../Functions/loadMount';\nimport MyContext from '../context/MyContext';\n\nfunction ComidaIng() {\n  const { setFilterByIng } = useContext(MyContext);\n  const [ingredients, setIngredients] = useState();\n  const [redirect, setRedirect] = useState({\n    redirect: false,\n  });\n  const getIngredients = async () => {\n    const list = await mainFetch('food', 'ingredients');\n    const { meals } = list;\n    const limitator = 12;\n    const foods = meals.filter((food, index) => index < limitator);\n    setIngredients(foods);\n  };\n\n  const getFoodById = async (ingredient) => {\n    const list = await mainFetch('food', 'filterIngredient', ingredient);\n    setFilterByIng({\n      ...list,\n    });\n  };\n\n  function onClick(event) {\n    const { name } = event.target;\n    setRedirect({\n      redirect: true,\n    });\n    getFoodById(name);\n  }\n\n  useEffect(() => {\n    getIngredients();\n  }, []);\n\n  if (redirect.redirect) return <Redirect to=\"/comidas\" />;\n  if (!ingredients) return loadMount('Explorar Ingredientes');\n  return (\n    <div>\n      <Header titulo=\"Explorar Ingredientes\" />\n      <main className=\"pageComida\">\n        <div>\n          <CardList\n            list={ ingredients }\n            apiType=\"Ingredient\"\n            page=\"comidas\"\n            onClick={ onClick }\n          />\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ComidaIng;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport CardList from '../components/CardList';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport mainFetch from '../fetchs/mainFetch';\nimport loadMount from '../Functions/loadMount';\nimport MyContext from '../context/MyContext';\n\nfunction BebidasIng() {\n  const { setFilterByIng } = useContext(MyContext);\n  const [ingredients, setIngredients] = useState();\n  const [redirect, setRedirect] = useState({\n    redirect: false,\n    path: '',\n  });\n  const getDrinks = async () => {\n    const list = await mainFetch('drink', 'ingredients');\n    const { drinks } = list;\n    const limitator = 12;\n    const drinkList = drinks.filter((drink, index) => index < limitator);\n    setIngredients(drinkList);\n  };\n\n  const getDrinkById = async (ingredient) => {\n    const list = await mainFetch('drink', 'filterIngredient', ingredient);\n    setFilterByIng({\n      ...list,\n    });\n  };\n\n  function onClick(event) {\n    const { name } = event.target;\n    setRedirect({\n      redirect: true,\n      path: name,\n    });\n    getDrinkById(name);\n  }\n\n  useEffect(() => {\n    getDrinks();\n  }, []);\n\n  if (redirect.redirect) return <Redirect to=\"/bebidas\" />;\n  if (!ingredients) return loadMount('Explorar Ingredientes');\n  return (\n    <div>\n      <Header titulo=\"Explorar Ingredientes\" />\n      <main className=\"pageComida\">\n        <div>\n          <CardList\n            list={ ingredients }\n            apiType=\"Ingredient\"\n            page=\"bebidas\"\n            onClick={ onClick }\n          />\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default BebidasIng;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <main>\n        <h1>Not Found</h1>\n      </main>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../cssPages/ButtonRedirect.css';\n\nfunction ButtonRedirect(data) {\n  const { renderData:\n    { id: idRecipe, pathname, renderType, completed, localStrObject } } = data;\n  const [redirect, setRedirect] = useState(null);\n\n  const doneRecipes = localStorage.getItem('doneRecipes')\n    ? JSON.parse(localStorage.getItem('doneRecipes')) : [];\n  const notDone = ((doneRecipes.filter(({ id }) => id === idRecipe).length) !== 1);\n  const inProgress = localStorage.getItem('inProgressRecipes')\n    ? localStorage.getItem('inProgressRecipes') : '';\n  const recipeinProgress = inProgress.includes(idRecipe);\n\n  const completeRecipe = () => {\n    const newDoneRecipe = { ...localStrObject };\n    newDoneRecipe.doneDate = (new Date()).toLocaleDateString();\n    localStorage.setItem('doneRecipes', JSON.stringify([...doneRecipes, newDoneRecipe]));\n  };\n\n  const redirectClick = (path) => {\n    if (renderType) completeRecipe();\n    setRedirect(path);\n  };\n\n  const redirectBtn = ([testId, destiny, text, disabled]) => (\n    <button\n      className=\"redirectBtn\"\n      data-testid={ testId }\n      disabled={ disabled }\n      type=\"button\"\n      onClick={ () => redirectClick(destiny) }\n    >\n      {text}\n    </button>\n  );\n\n  if (redirect) return <Redirect to={ redirect } />;\n\n  return (\n    renderType\n      ? redirectBtn(['finish-recipe-btn', '/receitas-feitas', 'Finalizar receita',\n        !completed])\n      : notDone && redirectBtn(['start-recipe-btn',\n        (`${pathname}/in-progress`).replace('//', '/'),\n        (recipeinProgress ? 'Continuar Receita' : 'Iniciar Receita')])\n  );\n}\n\nexport default ButtonRedirect;\n","import React, { useState } from 'react';\nimport favoriteIconTransp from '../images/whiteHeartIcon.svg';\nimport favoriteIconFull from '../images/blackHeartIcon.svg';\nimport '../cssPages/ButtonFavorite.css';\n\nfunction ButtonFavorite(data) {\n  const { favoriteObject } = data;\n  const { id: idRecipe } = favoriteObject;\n  const favorites = localStorage.getItem('favoriteRecipes')\n    ? localStorage.getItem('favoriteRecipes') : '';\n\n  const [isFavorite, setIsFavorite] = useState(favorites.includes(idRecipe));\n\n  const favoriteClick = () => {\n    const thisFavoriteObject = { ...favoriteObject };\n    delete thisFavoriteObject.tags;\n    const oldFavorites = (favorites === '') ? [] : JSON.parse(favorites);\n    const newFavorites = (isFavorite)\n      ? [...oldFavorites].filter(({ id }) => id !== idRecipe)\n      : [...oldFavorites, thisFavoriteObject];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n    setIsFavorite(!isFavorite);\n  };\n\n  return (\n    <button className=\"btnFavorite\" type=\"button\" onClick={ favoriteClick }>\n      <img\n        src={ isFavorite ? favoriteIconFull : favoriteIconTransp }\n        alt=\"Favorite\"\n        data-testid=\"favorite-btn\"\n      />\n    </button>\n  );\n}\n\nexport default ButtonFavorite;\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\nimport '../cssPages/ButtonShare.css';\n\nconst shareMsgDuration = 2000;\nconst copy = require('clipboard-copy');\n\nfunction ShareButton() {\n  const [showShareMsg, setShowShareMsg] = useState(false);\n  const { pathname } = useLocation();\n\n  const shareImgClick = () => {\n    copy((`http://localhost:3000${pathname}`).replace('/in-progress', ''));\n    setShowShareMsg(true);\n    setTimeout(() => setShowShareMsg(false), shareMsgDuration);\n  };\n\n  return (\n    <div className=\"btnShareContainer\">\n      <button className=\"btnShare\" type=\"button\" onClick={ shareImgClick }>\n        <img\n          src={ shareIcon }\n          alt=\"Compartilhe o link desta receita\"\n          data-testid=\"share-btn\"\n        />\n      </button>\n      {showShareMsg && <p>Link copiado!</p>}\n    </div>\n  );\n}\n\nexport default ShareButton;\n","/* eslint-disable no-magic-numbers */\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../cssPages/Detalhes.css';\n\nconst carouselStep = 1;\n\nfunction Carousel(data) {\n  console.log(data);\n  const { recipes: { recommended, recommendedType } } = data;\n  const [showIndex, setShowIndex] = useState(0);\n  const [redirect, setRedirect] = useState(null);\n\n  const recommendedCard = (recipe, index) => {\n    const hideCard = Math.floor(index / 2) !== showIndex ? ' hideCard' : '';\n    return (\n      <button\n        className={ `recommendedCard${hideCard}` }\n        data-testid={ `${index}-recomendation-card` }\n        key={ index }\n        type=\"button\"\n        onClick={ () => setRedirect(`/${recommendedType}/\n          ${recipe.idMeal || recipe.idDrink}`) }\n      >\n        <img\n          src={ recipe.strMealThumb || recipe.strDrinkThumb }\n          alt={ recipe.strMeal || recipe.strDrink }\n        />\n        <p>\n          {recipe.strCategory}\n        </p>\n        <h3 data-testid={ `${index}-recomendation-title` }>\n          {recipe.strMeal || recipe.strDrink}\n        </h3>\n      </button>\n    );\n  };\n\n  const handleCarouselBtn = (value) => {\n    const sum = (showIndex + value);\n    let newIndex = sum > 2 ? 0 : sum;\n    newIndex = sum < 0 ? 2 : newIndex;\n    setShowIndex(newIndex);\n  };\n\n  const carouselBtn = (text, value) => (\n    <button type=\"button\" onClick={ () => handleCarouselBtn(value) }>\n      {text}\n    </button>\n  );\n\n  if (redirect) return <Redirect to={ redirect } />;\n\n  return (\n    <section className=\"carousel\">\n      <div className=\"carouselBtnArea\">\n        { carouselBtn('<', -carouselStep) }\n        { carouselBtn('>', carouselStep) }\n      </div>\n      <div className=\"recommendedShow\">\n        {recommended.map((recipe, index) => recommendedCard(recipe, index))}\n      </div>\n    </section>\n  );\n}\n\nexport default Carousel;\n","import React, { useState, useEffect } from 'react';\nimport '../cssPages/IngredientsList.css';\n\nconst sectorTranslator = { comidas: 'meals', bebidas: 'cocktails' };\n\nfunction IngredientsList(params) {\n  const { id: recipeId, type, renderType, recipe, setCompleted } = params.data;\n  const sector = sectorTranslator[type];\n\n  const arrayList = Object.keys(recipe).filter((key) => key.includes('strIngredient')\n    && recipe[key] !== null && recipe[key] !== '');\n\n  const [recipeIngs, setRecipeIngs] = useState([]);\n\n  useEffect(() => {\n    if (recipeIngs.length === arrayList.length) {\n      setCompleted(true);\n    } else { setCompleted(false); }\n  }, [arrayList, recipeIngs, setCompleted]);\n\n  useEffect(() => {\n    if (!localStorage.getItem('inProgressRecipes')) {\n      localStorage.setItem('inProgressRecipes',\n        JSON.stringify({ cocktails: {}, meals: {} }));\n    } else {\n      setRecipeIngs((JSON.parse(localStorage\n        .getItem('inProgressRecipes')))[sector][recipeId] || []);\n    }\n  },\n  [recipeId, sector]);\n\n  const handleCheckBoxClick = (ingNum, ingOnArray) => {\n    const newRecipeIngs = ingOnArray\n      ? recipeIngs.filter((ing) => ing !== ingNum) : [...recipeIngs, ingNum].sort();\n    setRecipeIngs(newRecipeIngs);\n    localStorage.setItem('inProgressRecipes',\n      JSON.stringify({ ...JSON.parse(localStorage.getItem('inProgressRecipes')),\n        [sector]: { [recipeId]: newRecipeIngs } }));\n  };\n\n  const checkBoxComponent = (text, ingNum, ingOnArray) => (\n    <>\n      <input\n        type=\"checkbox\"\n        defaultChecked={ ingOnArray }\n        id={ `ingredient-${ingNum}` }\n        onClick={ () => handleCheckBoxClick(ingNum, ingOnArray) }\n      />\n      <label\n        htmlFor={ `ingredient-${ingNum}` }\n        className={ ingOnArray && 'checkedIng' }\n      >\n        { text }\n      </label>\n    </>\n  );\n\n  const list = () => {\n    const testIdText = renderType ? '-ingredient-step'\n      : '-ingredient-name-and-measure';\n    return (\n      <ul>\n        {\n          arrayList.map((ing, index) => {\n            const ingNum = ing.match(/\\d/g).join('');\n            const ingOnArray = (recipeIngs.indexOf(ingNum) >= 0) ? true : null;\n            const text = `${recipe[ing]}: ${recipe[`strMeasure${ingNum}`]}`;\n            return (\n              <li\n                key={ index }\n                data-testid={ `${index}${testIdText}` }\n              >\n                {(renderType) ? checkBoxComponent(text, ingNum, ingOnArray) : text }\n              </li>\n            );\n          })\n        }\n      </ul>\n    );\n  };\n\n  return (\n    <>\n      {list()}\n    </>\n  );\n}\n\nexport default IngredientsList;\n","import React from 'react';\nimport '../cssPages/Detalhes.css';\n\nfunction VideoEmbed(data) {\n  const { videoData: { url, recipeName } } = data;\n  const allow = 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope;'\n      + 'picture-in-picture';\n\n  if (!url) return null;\n\n  return (\n    <iframe\n      height=\"480\"\n      src={ url.replace('/watch?v=', '/embed/') }\n      frameBorder=\"0\"\n      allow={ allow }\n      allowFullScreen\n      ng-show=\"showvideo\"\n      title={ `${recipeName} Video` }\n      data-testid=\"video\"\n    />\n  );\n}\n\nexport default VideoEmbed;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ButtonRedirect from '../components/ButtonRedirect';\nimport ButtonFavorite from '../components/ButtonFavorite';\nimport ButtonShare from '../components/ButtonShare';\nimport Carousel from '../components/Carousel';\nimport IngredientsList from '../components/IngredientsList';\nimport Loading from '../components/Loading';\nimport VideoEmbed from '../components/VideoEmbed';\nimport mainFetch from '../fetchs/mainFetch';\nimport '../cssPages/Detalhes.css';\n\nconst fetchTranslator = { comidas: 'food', bebidas: 'drink' };\nconst jsonTranslator = { comidas: 'Meal', bebidas: 'Drink' };\nconst recommendedQuantity = 6;\n\nfunction Detalhes() {\n  // Declarações de variáveis para saber se é pagina de comida ou bebida e definir o tipo recomendado\n  const { pathname } = useLocation();\n  const [, type, id, renderType] = pathname.split('/');\n  const recommendedType = (type === 'comidas') ? 'bebidas' : 'comidas';\n\n  // Variáveis com as informações da receita e dos recomendados e o fetch delas\n  const [recipe, setRecipe] = useState(false);\n  const [recommended, setRecommended] = useState(false);\n  const [completed, setCompleted] = useState(false);\n\n  useEffect(() => {\n    const detailsFetchs = async (params) => {\n      const [kind, action, value, size, callback] = params;\n      console.log(kind, action, value, size, callback);\n      const apiResult = await mainFetch(kind, action, value);\n      const { meals, drinks } = apiResult;\n      let result = meals || drinks;\n      console.log(result);\n      result = (size > 1) ? result.slice(0, size) : result[0];\n      callback(result);\n    };\n    detailsFetchs([fetchTranslator[type], 'procuraId', id, 1, setRecipe]);\n    detailsFetchs([fetchTranslator[recommendedType], 'procuraComida', '',\n      recommendedQuantity, setRecommended]);\n  }, [id, recommendedType, type]);\n\n  // Variáveis provenientes da receita em questão\n  const { strYoutube: url, strMeal, strDrink } = recipe;\n  const recipeName = strDrink || strMeal;\n\n  const localStrObject = {\n    id,\n    type: type.replace('s', ''),\n    area: recipe.strArea ? recipe.strArea : '',\n    category: recipe.strCategory,\n    alcoholicOrNot: recipe.strAlcoholic ? recipe.strAlcoholic : '',\n    name: recipe[`str${jsonTranslator[type]}`],\n    image: recipe[`str${jsonTranslator[type]}Thumb`],\n    tags: (recipe.strTags) ? recipe.strTags.split(',') : '',\n  };\n\n  if (!recipe || !recommended) return <Loading />;\n\n  return (\n    <>\n      <main className=\"main-details\">\n        <img\n          src={ recipe[`str${jsonTranslator[type]}Thumb`] }\n          alt={ recipeName }\n          data-testid=\"recipe-photo\"\n          className=\"thumbnail-details\"\n        />\n        <h1 data-testid=\"recipe-title\">{recipeName}</h1>\n        <div className=\"btnIcons\">\n          <ButtonShare />\n          <ButtonFavorite favoriteObject={ localStrObject } />\n        </div>\n        <h2 data-testid=\"recipe-category\">\n          {type === 'comidas' ? recipe.strCategory : recipe.strAlcoholic}\n        </h2>\n        <br />\n        <h3>Ingredients</h3>\n        <IngredientsList\n          key={ pathname }\n          data={ { id, type, renderType, recipe, setCompleted } }\n        />\n        <br />\n        <h3>Instructions</h3>\n        <p data-testid=\"instructions\">\n          {recipe.strInstructions}\n        </p>\n        <br />\n        <VideoEmbed videoData={ { url, recipeName } } />\n        <br />\n        <Carousel\n          key={ pathname }\n          recipes={ { recommended, recommendedType } }\n        />\n        <br />\n      </main>\n      <ButtonRedirect\n        key={ pathname }\n        renderData={ { pathname, id, renderType, completed, localStrObject } }\n      />\n    </>\n  );\n}\n\nexport default Detalhes;\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Provider from './context/Provider';\nimport Login from './pages/Login';\nimport Comidas from './pages/Comidas';\nimport Explorar from './pages/Explorar';\nimport BebidasExp from './pages/BebidasExp';\nimport ComidasExp from './pages/ComidasExp';\nimport Bebidas from './pages/Bebidas';\nimport Perfil from './pages/Perfil';\nimport ReceitasFeitas from './pages/ReceitasFeitas';\nimport TelaDeFavoritos from './pages/TelaDeFavoritos';\nimport LocalDeOrigem from './pages/LocalDeOrigem';\nimport ComidaIng from './pages/ComidaIng';\nimport BebidasIng from './pages/BebidasIng';\nimport NotFound from './pages/NotFound';\nimport Detalhes from './pages/Detalhes';\n\nfunction App() {\n  return (\n    <Provider>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={ Login } />\n          <Route exact path=\"/comidas\" component={ Comidas } />\n          <Route exact path=\"/bebidas\" component={ Bebidas } />\n          <Route exact path=\"/comidas/:id\" key={ 1 } component={ Detalhes } />\n          <Route exact path=\"/bebidas/:id\" key={ 2 } component={ Detalhes } />\n          <Route exact path=\"/comidas/:id/in-progress\" key={ 3 } component={ Detalhes } />\n          <Route exact path=\"/bebidas/:id/in-progress\" key={ 4 } component={ Detalhes } />\n          <Route exact path=\"/explorar/comidas\" component={ ComidasExp } />\n          <Route exact path=\"/explorar/bebidas\" component={ BebidasExp } />\n          <Route exact path=\"/explorar/comidas/area\" component={ LocalDeOrigem } />\n          <Route exact path=\"/explorar/comidas/ingredientes\" component={ ComidaIng } />\n          <Route exact path=\"/explorar/bebidas/ingredientes\" component={ BebidasIng } />\n          <Route exact path=\"/explorar\" component={ Explorar } />\n          <Route exact path=\"/perfil\" component={ Perfil } />\n          <Route exact path=\"/receitas-feitas\" component={ ReceitasFeitas } />\n          <Route exact path=\"/receitas-favoritas\" component={ TelaDeFavoritos } />\n          <Route path=\"/\" component={ NotFound } />\n        </Switch>\n      </HashRouter>\n    </Provider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}